" 1.0b3 (created: 2010/11/06 12:31:35)
set runtimepath=~/.pentadactyl

colorscheme solarized-dark
highlight Hint       font-size: 11px; background: rgba(210,1,133,0.8) !important; border: 2px solid rgb(165,1,105); padding: 4px; border-radius: 3px; font-weight: bold; margin-left: -25px; color: white; font-family: 'Fira Mono'; line-height:1em;
highlight HintActive background: rgba(145,197,43,0.8)    !important;
highlight HintElem   background: rgba(255, 209, 20, 0.7) !important;
highlight StatusLine -moz-appearance: none !important; font-weight: normal; background: transparent !important; border: 0px !important; min-height: 22px !important; text-shadow: none !important; font: normal 14px/1 'Fira Mono' !important; padding: 3px 0px 3px 5px !important;
highlight CmdLine    padding: 1px !important; font: normal 13px 'Fira Mono' !important;
highlight CmdOutput  font: normal 13px 'Fira Mono' !important;
highlight CompItem   font: normal 13px 'Fira Mono' !important;

highlight Find background: #d6c149; color: #000;

set editor='/usr/local/bin/mvim -f +<line> <file>'
"set followhints=1
set showtabline=multitab
set showstatuslinks=command

nmap -builtin -silent <space>nt :set showtabline=never<cr>:set guioptions-=mT<cr>
nmap -builtin -silent <space>t :set showtabline=always<cr>:set guioptions+=mT<cr>

" FASTER PLEASE
nmap -builtin -silent j 4j
nmap -builtin -silent k 4k

" Go to the second input field.
" Useful for skipping over search fields, etc.
nmap -builtin gI 2gi

" I never use marks, but always use quickmarks.
nmap -builtin "'" go
nmap -builtin '"' gn

" Switch tabs with parens
nmap -builtin ) :tn<CR>
nmap -builtin ( :tp<CR>

" Console toggle
nmap -builtin <c-g> <m-a-k><esc>
imap -builtin <c-g> <esc><m-a-k><esc>

" Inspect element toggle
nmap -builtin <c-s> <m-a-i>
imap -builtin <c-s> <esc><m-a-i>

" Shift is hard.
" nmap -builtin ; :

" YES YES YES REMOVE THE IDIOCY
nmap -builtin <bs> <nop>

" Highlight all search matches, not just the first.
set hlfind

" Clear search highlighting and normal highlighting.
nmap -builtin <space>, <esc>:noh<CR>

" No beeping
javascript dactyl.beep = function() { return false; }

" Use DDG as search engine.
set defsearch=duckduckgo

" Train myself to use t instead of cmd-t
nmap -builtin <m-t> <nop>

" Apparently the d key broke at some point.
nmap -builtin d :tabclose<cr>

" A Double space will take you back to alternative tab
nmap -builtin <space><space> <c-^>

" open the buffer list with space+enter
nmap -builtin <space><cr> b

" set g-p to pin and un-pin tabs
nmap -builtin gp :pin!<cr>

nmap -builtin <c-e> g$

" Kill me
style -name ublick * #nav-bar * { visibility: visible; }

"Hide some stuff
set guioptions=CsmT

" Use gJ and gK to re-order tabs
map gJ :tabmove! -1<CR>
map gK :tabmove! +1<CR>

" Toggle the bookmarks bar
map <space>b :toolbartoggle Bookmarks Toolbar<cr>

" Print out the width of the current window
" this does not exclude the inpector unfortunately
map <space>ww :echo window.innerWidth<cr>

" Resource the settings for Penta
map <space>src :source ~/.pentadactylrc<cr>:echo 'sourced!'<cr>

" Enter pass through mode more easily
map -builtin I <c-z>

" Save to pocket
map <space>poc :javascript (function(){var%20e=function(t,n,r,i,s){var%20o=[3137712,6303549,5093310,2303353,2344161,5110952,2417100,1106012,5030417,6505520];var%20i=i||0,u=0,n=n||[],r=r||0,s=s||0;var%20a={'a':97,'b':98,'c':99,'d':100,'e':101,'f':102,'g':103,'h':104,'i':105,'j':106,'k':107,'l':108,'m':109,'n':110,'o':111,'p':112,'q':113,'r':114,'s':115,'t':116,'u':117,'v':118,'w':119,'x':120,'y':121,'z':122,'A':65,'B':66,'C':67,'D':68,'E':69,'F':70,'G':71,'H':72,'I':73,'J':74,'K':75,'L':76,'M':77,'N':78,'O':79,'P':80,'Q':81,'R':82,'S':83,'T':84,'U':85,'V':86,'W':87,'X':88,'Y':89,'Z':90,'0':48,'1':49,'2':50,'3':51,'4':52,'5':53,'6':54,'7':55,'8':56,'9':57,'\/':47,':':58,'?':63,'=':61,'-':45,'_':95,'&':38,'$':36,'!':33,'.':46};if(!s||s==0){t=o[0]+t}for(var%20f=0;f<t.length;f++){var%20l=function(e,t){return%20a[e[t]]?a[e[t]]:e.charCodeAt(t)}(t,f);if(!l*1)l=3;var%20c=l*(o[i]+l*o[u%o.length]);n[r]=(n[r]?n[r]+c:c)+s+u;var%20p=c%(50*1);if(n[p]){var%20d=n[r];n[r]=n[p];n[p]=d}u+=c;r=r==50?0:r+1;i=i==o.length-1?0:i+1}if(s==113){var%20v='';for(var%20f=0;f<n.length;f++){v+=String.fromCharCode(n[f]%(25*1)+97)}o=function(){};return%20v+'871035e5cc'}else{return%20e(u+'',n,r,i,s+1)}};var%20t=document,n=t.location.href,r=t.title;var%20i=e(n);var%20s=t.createElement('script');s.type='text/javascript';s.src='https://getpocket.com/b/r4.js?h='+i+'&u='+encodeURIComponent(n)+'&t='+encodeURIComponent(r);e=i=function(){};var%20o=t.getElementsByTagName('head')[0]||t.documentElement;o.appendChild(s)})()<cr>

" TILING
" Uses another addon https://addons.mozilla.org/en-US/firefox/addon/tile-tabs/

" Open a new split below
command! sp :emenu Tile.Tile Duplicate Tab.Above

" Open a new split left
command! vsp :emenu Tile.Tile Duplicate Tab.Right

" command! sp -nargs=* -complete=buffer :emenu Tile.Tile Tab.Left.<args>

" Close tile the same as with closing a tab
map <c-q> d
" I can't think why you would need a macro in FF ?!?
nmap q d

" for Easier split navigation (possibly)
" This is not perfect but it sort of works
map <c-h> )
map <c-j> )
map <c-l> (
map <c-k> (

